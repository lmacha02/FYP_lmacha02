@model FinalYearProjectClassified.Models.MyAccount.EditAdViewModel

@{
    var isEditMode = Model.AdId.HasValue;
    ViewBag.Title = isEditMode ? "Edit Ad" : "Create Ad";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("EditAd", "MyAccount", FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()

    <hr/>
    <div class="form-horizontal col-md-6"> 
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PostCode, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.PostCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PostCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Images, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-6">
                <input type="file" name="files" id="files" class="btn btn-default" multiple style="width:100%;"/>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-3 col-md-6">
                @if (isEditMode)
                {
                    <input type="submit" value="Save changes" class="btn btn-success" />
                }
                else
                {
                    <input type="submit" value="Create" class="btn btn-success" />
                }
            </div>
        </div>
    </div>
}

@if (isEditMode)
{
    <div class="col-md-6">
        @foreach (var img in Model.Images)
        {
            <div class="imgframemyhome img-responsive">
                <a href="@Url.Action("DeleteImage", "MyAccount",new {id = Model.AdId, imgId = img.Id})">
                    <img src="@Url.Content(img.FilePath)" alt="" class="deletion img-responsive img-rounded allimages" 
                         onclick="return confirm('Are you sure you want to delete this image?')">
                </a>
            </div>
        }
    </div>
}

@section Scripts {
    <script>
        //Asks user if to delete image
        $('.deletion').mouseenter(function () {
            $(this).css({ 'opacity': '.4' }).css({'border': '.7px solid'});
        }).mouseleave(function () {
            $(this).css({ 'opacity': '1' }).css({ 'border': '' });
        });
       
    </script>

    @Scripts.Render("~/bundles/jqueryval")
}
